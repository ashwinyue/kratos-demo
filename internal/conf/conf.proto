syntax = "proto3";
package kratos.api;

option go_package = "kratos-demo/internal/conf;conf";

import "google/protobuf/duration.proto";

message Bootstrap {
  Server server = 1;
  Data data = 2;
  Telemetry telemetry = 3;
  Cron cron = 4;
}

message Server {
  message HTTP {
    string network = 1;
    string addr = 2;
    google.protobuf.Duration timeout = 3;
  }
  message GRPC {
    string network = 1;
    string addr = 2;
    google.protobuf.Duration timeout = 3;
  }
  HTTP http = 1;
  GRPC grpc = 2;
}

message Data {
  message Database {
    string driver = 1;
    string source = 2;
  }
  message Redis {
    string network = 1;
    string addr = 2;
    google.protobuf.Duration read_timeout = 3;
    google.protobuf.Duration write_timeout = 4;
  }
  message MongoDB {
    string uri = 1;
    string database = 2;
    google.protobuf.Duration timeout = 3;
  }
  message RocketMQ {
    repeated string name_servers = 1;
    string group_name = 2;
    string access_key = 3;
    string secret_key = 4;
    string namespace = 5;
  }
  Database database = 1;
  Redis redis = 2;
  MongoDB mongodb = 3;
  RocketMQ rocketmq = 4;
}

message Telemetry {
  message Tracing {
    string endpoint = 1;
    double sampler = 2;
    int32 batcher = 3;
  }
  message Metrics {
    string addr = 1;
    string path = 2;
  }
  Tracing tracing = 1;
  Metrics metrics = 2;
}

message Cron {
  bool enabled = 1;
  string timezone = 2;
}
